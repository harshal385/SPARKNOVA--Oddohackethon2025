{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/odoo/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///D:/odoo/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///D:/odoo/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///D:/odoo/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///D:/odoo/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///D:/odoo/src/ai/flows/suggest-tags-and-questions.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview This file defines a Genkit flow for suggesting relevant tags and similar questions\n * based on a given question title and description.\n *\n * - suggestTagsAndQuestions - A function that orchestrates the tag and question suggestion process.\n * - SuggestTagsAndQuestionsInput - The input type for the suggestTagsAndQuestions function.\n * - SuggestTagsAndQuestionsOutput - The return type for the suggestTagsAndQuestions function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestTagsAndQuestionsInputSchema = z.object({\n  title: z.string().describe('The title of the question.'),\n  description: z.string().describe('The description of the question.'),\n});\nexport type SuggestTagsAndQuestionsInput = z.infer<\n  typeof SuggestTagsAndQuestionsInputSchema\n>;\n\nconst SuggestTagsAndQuestionsOutputSchema = z.object({\n  suggestedTags: z\n    .array(z.string())\n    .describe('An array of suggested tags for the question.'),\n  suggestedQuestions: z\n    .array(z.string())\n    .describe('An array of similar questions from the knowledge base.'),\n});\nexport type SuggestTagsAndQuestionsOutput = z.infer<\n  typeof SuggestTagsAndQuestionsOutputSchema\n>;\n\nexport async function suggestTagsAndQuestions(\n  input: SuggestTagsAndQuestionsInput\n): Promise<SuggestTagsAndQuestionsOutput> {\n  return suggestTagsAndQuestionsFlow(input);\n}\n\nconst suggestTagsAndQuestionsPrompt = ai.definePrompt({\n  name: 'suggestTagsAndQuestionsPrompt',\n  input: {schema: SuggestTagsAndQuestionsInputSchema},\n  output: {schema: SuggestTagsAndQuestionsOutputSchema},\n  prompt: `Given the following question title and description, suggest relevant tags and similar questions from the knowledge base.\n\nTitle: {{{title}}}\nDescription: {{{description}}}\n\nSuggest at least 3 relevant tags.\nSuggest at least 3 similar questions.\n\nEnsure that the output is a valid JSON object that matches the schema.`,\n});\n\nconst suggestTagsAndQuestionsFlow = ai.defineFlow(\n  {\n    name: 'suggestTagsAndQuestionsFlow',\n    inputSchema: SuggestTagsAndQuestionsInputSchema,\n    outputSchema: SuggestTagsAndQuestionsOutputSchema,\n  },\n  async input => {\n    const {output} = await suggestTagsAndQuestionsPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAiCsB,0BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///D:/odoo/src/components/questions/question-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useTransition } from 'react';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Loader2, Sparkles, Tag, HelpCircle, X } from 'lucide-react';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { suggestTagsAndQuestions } from '@/ai/flows/suggest-tags-and-questions';\nimport { useToast } from \"@/hooks/use-toast\";\nimport Link from 'next/link';\n\nconst formSchema = z.object({\n  title: z.string().min(15, \"Title must be at least 15 characters.\").max(150),\n  description: z.string().min(30, \"Description must be at least 30 characters.\"),\n  tags: z.array(z.string()).min(1, \"Please add at least one tag.\").max(5, \"You can add up to 5 tags.\"),\n});\n\nexport function QuestionForm() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [tagInput, setTagInput] = useState('');\n  \n  const [isAiLoading, startAiTransition] = useTransition();\n  const [aiSuggestions, setAiSuggestions] = useState<{ suggestedTags: string[]; suggestedQuestions: string[] } | null>(null);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      tags: [],\n    },\n  });\n\n  const title = form.watch('title');\n  const description = form.watch('description');\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (title.length > 10 && description.length > 20) {\n        startAiTransition(async () => {\n          try {\n            const suggestions = await suggestTagsAndQuestions({ title, description });\n            setAiSuggestions(suggestions);\n          } catch (error) {\n            console.error(\"AI suggestion failed:\", error);\n            toast({ variant: 'destructive', title: 'AI Suggestion Error', description: 'Could not fetch AI suggestions.' });\n          }\n        });\n      }\n    }, 500); // Debounce AI call\n\n    return () => clearTimeout(handler);\n  }, [title, description, toast]);\n\n  const handleTagKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' || e.key === ',') {\n      e.preventDefault();\n      const newTag = tagInput.trim().toLowerCase();\n      if (newTag && !form.getValues('tags').includes(newTag)) {\n        const currentTags = form.getValues('tags');\n        if (currentTags.length < 5) {\n          form.setValue('tags', [...currentTags, newTag]);\n        }\n        setTagInput('');\n      }\n    }\n  };\n\n  const removeTag = (tagToRemove: string) => {\n    form.setValue('tags', form.getValues('tags').filter(tag => tag !== tagToRemove));\n  };\n  \n  const addSuggestedTag = (tag: string) => {\n    if (!form.getValues('tags').includes(tag) && form.getValues('tags').length < 5) {\n        form.setValue('tags', [...form.getValues('tags'), tag]);\n    }\n  };\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsSubmitting(true);\n    console.log(values);\n    // Mock API call\n    setTimeout(() => {\n      setIsSubmitting(false);\n      toast({\n        title: \"Question Posted!\",\n        description: \"Your question has been successfully posted to the community.\",\n      });\n      router.push('/');\n    }, 1500);\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n      <div className=\"md:col-span-2\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n            <Card>\n              <CardHeader><CardTitle>Title</CardTitle></CardHeader>\n              <CardContent>\n                <FormField\n                  control={form.control}\n                  name=\"title\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Be specific and imagine you’re asking a question to another person.</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g. How do I center a div in CSS?\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader><CardTitle>Description</CardTitle></CardHeader>\n              <CardContent>\n                <FormField\n                  control={form.control}\n                  name=\"description\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Include all the information someone would need to answer your question.</FormLabel>\n                      <FormControl>\n                        <Textarea placeholder=\"Describe your problem in detail...\" {...field} rows={10} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader><CardTitle>Tags</CardTitle></CardHeader>\n              <CardContent>\n                <FormField\n                  control={form.control}\n                  name=\"tags\"\n                  render={() => (\n                    <FormItem>\n                      <FormLabel>Add up to 5 tags to describe what your question is about.</FormLabel>\n                      <FormControl>\n                        <div>\n                          <div className=\"flex flex-wrap gap-2 mb-2 min-h-[28px]\">\n                            {form.watch('tags').map(tag => (\n                              <Badge key={tag} variant=\"secondary\" className=\"text-sm\">\n                                {tag}\n                                <button type=\"button\" onClick={() => removeTag(tag)} className=\"ml-2 rounded-full hover:bg-muted-foreground/20 p-0.5\">\n                                  <X className=\"h-3 w-3\" />\n                                </button>\n                              </Badge>\n                            ))}\n                          </div>\n                          <Input \n                            value={tagInput}\n                            onChange={(e) => setTagInput(e.target.value)}\n                            onKeyDown={handleTagKeyDown}\n                            placeholder=\"e.g. (react, typescript, css)\"\n                            disabled={form.getValues('tags').length >= 5}\n                          />\n                        </div>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n            </Card>\n            \n            <Button type=\"submit\" disabled={isSubmitting} className=\"bg-accent hover:bg-accent/90 text-accent-foreground\">\n              {isSubmitting ? <Loader2 className=\"animate-spin\" /> : \"Post Your Question\"}\n            </Button>\n          </form>\n        </Form>\n      </div>\n\n      <div className=\"space-y-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center gap-2\">\n            <Sparkles className=\"h-5 w-5 text-accent\" />\n            <CardTitle>AI Suggestions</CardTitle>\n            {isAiLoading && <Loader2 className=\"h-4 w-4 animate-spin\" />}\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h4 className=\"font-semibold flex items-center gap-2 mb-2\"><Tag className=\"h-4 w-4\" /> Suggested Tags</h4>\n              {aiSuggestions?.suggestedTags?.length ? (\n                <div className=\"flex flex-wrap gap-2\">\n                  {aiSuggestions.suggestedTags.map(tag => (\n                    <Button key={tag} size=\"sm\" variant=\"outline\" onClick={() => addSuggestedTag(tag)}>{tag}</Button>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-sm text-muted-foreground\">Type your question to see tag suggestions.</p>\n              )}\n            </div>\n            <div className=\"pt-4 border-t\">\n              <h4 className=\"font-semibold flex items-center gap-2 mb-2\"><HelpCircle className=\"h-4 w-4\" /> Related Questions</h4>\n              {aiSuggestions?.suggestedQuestions?.length ? (\n                 <ul className=\"space-y-2\">\n                    {aiSuggestions.suggestedQuestions.map((q, i) => (\n                      <li key={i} className=\"text-sm\">\n                        <Link href=\"#\" className=\"text-primary hover:underline\">{q}</Link>\n                      </li>\n                    ))}\n                 </ul>\n              ) : (\n                 <p className=\"text-sm text-muted-foreground\">No similar questions found yet.</p>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}